<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.lvr.kdshop.business.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.lvr.kdshop.pojo.SysUser" >
    <id column="id" property="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="phone" property="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="username" property="username" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="password" property="password" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="create_at" property="createAt" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="last_login" property="lastLogin" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="status" property="status" jdbcType="TINYINT" javaType="java.lang.Byte" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="sex" property="sex" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="img_url" property="imgUrl" jdbcType="LONGNVARCHAR" javaType="java.lang.String" />
    <result column="residence" property="residence" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    <result column="signature" property="signature" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
    <collection property="roles" javaType="java.util.List" resultMap="roleResultMap" />
  </resultMap>

  <resultMap id="roleResultMap" type="com.lvr.kdshop.pojo.Roles">
    <id column="id" property="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="role_id" property="roleId" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="commet" property="commet" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="create_date" property="createDate" jdbcType="VARCHAR" javaType="java.lang.String" />
  </resultMap>

  <sql id="selectUserVo">
        select
        u.user_id, u.username, u.phone, u.password, u.sex,u.img_url, u.status, u.last_login, u.create_at, u.birthday,u.residence,u.signature,
        r.role_id, r.role_name, r.commet, r.create_date
        from user u
		    left join user_role ur on u.id = ur.user_id
		    left join roles r on r.role_id = ur.role_id
    </sql>

  <!--通过id删除用户信息-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <!--添加用户-->
  <insert id="insert" parameterType="com.lvr.kdshop.pojo.SysUser" useGeneratedKeys="true" keyProperty="">

    insert into user (user_id, phone, username,
      password, create_at,
      goods_num, last_login,
      password, create_at,
      last_login,
      status, birthday, sex,
      img_url, residence, signature
      )
    values (#{userId,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR}, #{username,jdbcType=VARCHAR},
      #{password,jdbcType=CHAR}, #{createAt,jdbcType=VARCHAR},
      #{lastLogin,jdbcType=VARCHAR},
      #{status,jdbcType=TINYINT}, #{birthday,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
      #{imgUrl,jdbcType=LONGVARCHAR}, #{residence,jdbcType=LONGVARCHAR}, #{signature,jdbcType=LONGVARCHAR}
      )
  </insert>

  <!--通过id更新用户信息-->
  <update id="updateByPrimaryKey" parameterType="com.lvr.kdshop.pojo.SysUser" >
    update user
    set phone = #{phone,jdbcType=CHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      create_at = #{createAt,jdbcType=VARCHAR},
      last_login = #{lastLogin,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      img_url = #{imgUrl,jdbcType=LONGVARCHAR},
      residence = #{residence,jdbcType=LONGVARCHAR},
      signature = #{signature,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--通过id查找用户-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select user_id, phone, username, password, create_at, last_login,
    status, birthday, sex, img_url, residence, signature
    from user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>

  <!--查询所有用户信息-->
  <select id="selectAll" resultMap="BaseResultMap" >
    select
user_id, phone, username, password, create_at, last_login, status, birthday, sex, img_url, residence, signature
    from
      user
  </select>

  <!--和上面自动生成的一样-->
  <select id="getUserList" resultMap="BaseResultMap">
    SELECT
 user_id, phone, username, password, create_at, last_login, status, img_url, birthday, sex,residence,signature
    FROM
      user
  </select>

  <!--通过手机号获取用户信息-->
  <select id="getUserByPhone" resultMap="BaseResultMap" parameterType="java.lang.String">
      <include refid="selectUserVo"/>
    WHERE
      u.phone = #{phone}

  </select>

  <!--更新最后登录时间-->
  <update id="updateLastLoginByPrimaryKey" parameterType="com.lvr.kdshop.pojo.SysUser">
      update
       user
      set
       last_login = #{lastLogin,jdbcType=VARCHAR}
      where
       user_id = #{userId,jdbcType=VARCHAR}
  </update>

  <!--更新用户头像-->
  <update id="updateImgUrl">
    update
     user
    <set>
      <if test="url != null">
        img_url = #{url}
      </if>
    </set>
    where
     id = ${id}
  </update>

  <!--更新用户信息-->
  <update id="updateByPrimaryKeySelective" parameterType="com.lvr.kdshop.pojo.SysUser">
    UPDATE
      USER
    <set>
      <if test="phone != null">
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=VARCHAR},
      </if>
      <if test="lastLogin != null">
        last_login = #{lastLogin,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="imgUrl != null">
        img_url = #{imgUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="residence != null">
        residence = #{residence,jdbcType=LONGVARCHAR},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=LONGVARCHAR}
      </if>
    </set>
    where
      id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="checkUserByPhone" resultType="java.lang.Integer">
    SELECT
     COUNT(*)
    FROM
     USER
    WHERE
      phone=#{phone}
  </select>

  <update id="updatePasswordByPrimaryKey">
    UPDATE
      user
    <set>
      <if test="password != null">
        password = #{password}
      </if>
    </set>
    WHERE
      user_id = #{uid}
  </update>

  <select id="selectUserByUserName" parameterType="String" resultMap="BaseResultMap">
    <include refid="selectUserVo"/>
    where u.user_name = #{userName}
  </select>

  <select id="searchUserByNameOrPhone" resultMap="BaseResultMap">
      SELECT
        *
      FROM
        user
      WHERE
        (username like concat('%',#{name},'%')
      OR
        phone like concat('%',#{phone},'%'))
  </select>



</mapper>