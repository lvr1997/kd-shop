<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.lvr.kdshop.business.mapper.OrdersMapper" >
    <resultMap id="BaseResultMap" type="com.lvr.kdshop.pojo.Orders" >

    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor >
      <arg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
        <arg column="order_id" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="good_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="address_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="pay_id" jdbcType="LONGVARCHAR" javaType="java.lang.String" />
      <arg column="create_at" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="TINYINT" javaType="java.lang.Byte" />
    </constructor>
    </resultMap>

    <insert id="insert" parameterType="com.lvr.kdshop.pojo.Orders" >

    insert
    into
    orders
      (id, order_id, user_id, good_id, address_id, pay_id, create_at, status)
    values
      (#{id,jdbcType=INTEGER},
       #{orderId,jdbcType=LONGVARCHAR},
       #{userId,jdbcType=INTEGER},
       #{goodId,jdbcType=INTEGER},
       #{addressId,jdbcType=INTEGER},
       #{payId,jdbcType=LONGVARCHAR},
       #{createAt,jdbcType=VARCHAR},
       #{status,jdbcType=TINYINT})
    </insert>
    <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
        id, order_id, user_id, good_id, address_id, pay_id, create_at, status
    from orders
    </select>

    <select id="selectOrdersByUserId" resultMap="BaseResultMap">
      SELECT
        id, order_id, user_id, good_id, address_id, pay_id, create_at, status
      FROM
        orders
      WHERE
        user_id = #{userId}
    </select>

    <select id="selectOrdersByGoodId" resultMap="BaseResultMap">
        SELECT
          o.id, o.order_id, o.user_id, o.good_id, o.address_id, o.pay_id, o.create_at, o.status, g.price
        FROM
          orders o left join goods g on o.good_id=g.id
        WHERE
          o.good_id = #{goodId}

    </select>

    <select id="getSpendByUserId" resultType="java.lang.Double" parameterType="java.lang.String">
        SELECT
            SUM(g.price) as spend
        FROM
            orders o LEFT JOIN goods g
        ON
            o.good_id = g.id
        group by
            o.user_id
        having
            o.user_id = #{userId}
    </select>

    <select id="getIncomeByUserId" resultType="java.lang.Double" parameterType="java.lang.String">
        SELECT
            SUM(g.price) as income
        FROM orders o LEFT JOIN goods g

        ON o.good_id = g.id

        group by g.user_id

        HAVING g.user_id = #{userId}
    </select>

</mapper>